Here are some examples of effective step breakdowns and their implementations:

Example 1:
Step: "Load and preprocess a dataset for image classification"
Plan:
1. Import necessary libraries (pandas, numpy, torch, PIL)
2. Define the dataset path and parameters
3. Load raw data from files
4. Apply image preprocessing (resize, normalize, augmentations)
5. Create data loaders with batch processing
6. Implement validation split
7. Add error handling for file not found or corrupt data

Example 2:
Step: "Build a CNN model for image classification"
Plan:
1. Import PyTorch libraries
2. Define model architecture (layers, activation functions)
3. Initialize model parameters
4. Set up optimizer and loss function
5. Implement forward pass
6. Add GPU support if available
7. Create model checkpoint saving mechanism

Example 3:
Step: "Train a machine learning model with early stopping"
Plan:
1. Set up training parameters (epochs, learning rate)
2. Initialize tracking for best model
3. Create training loop over epochs
4. Implement batch processing
5. Calculate and log metrics
6. Check early stopping condition
7. Save best model checkpoint
8. Add learning rate scheduling

Example 4:
Step: "Create a FastAPI endpoint for model inference"
Plan:
1. Import FastAPI and related libraries
2. Define request/response data models using Pydantic
3. Load the trained model
4. Create endpoint function with proper route
5. Implement preprocessing of input data
6. Perform model inference
7. Format and return prediction results
8. Add error handling for invalid inputs

Example 5:
Step: "Visualize model performance metrics with Streamlit"
Plan:
1. Import Streamlit and visualization libraries
2. Load model evaluation results
3. Create layout for the dashboard
4. Generate confusion matrix visualization
5. Plot accuracy and loss curves
6. Add interactive elements for filtering results
7. Implement data table with detailed metrics
8. Add download functionality for reports
