```java
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

public class DigitalCustomerPortalTest {

    private WebDriver driver;

    @BeforeClass
    public void setUp() {
        // Set up the ChromeDriver path
        System.setProperty("webdriver.chrome.driver", "/path/to/chromedriver");
        driver = new ChromeDriver();
        driver.manage().window().maximize();
    }

    @Test
    public void testDigitalCustomerPortal() {
        // Step 1: Log in to Digital Customer Portal
        driver.get("https://digitalcustomerportal.example.com");
        // Assuming login is handled automatically or session is already active
        Assert.assertEquals(driver.getTitle(), "Landing Page");

        // Step 2: Check top ribbon contents
        WebElement topRibbon = driver.findElement(By.id("topRibbon"));
        Assert.assertTrue(topRibbon.isDisplayed());
        Assert.assertTrue(topRibbon.getText().contains("Contact icon"));
        Assert.assertTrue(topRibbon.getText().contains("Settings icon"));
        Assert.assertTrue(topRibbon.getText().contains("Notification bell icon"));
        Assert.assertTrue(topRibbon.getText().contains("Icon with name shortcut"));
        Assert.assertTrue(topRibbon.getText().contains("Name of logged in user"));
        Assert.assertTrue(topRibbon.getText().contains("Admin icon"));

        // Step 3: Check page tiles
        WebElement tilesContainer = driver.findElement(By.id("tilesContainer"));
        Assert.assertTrue(tilesContainer.isDisplayed());
        Assert.assertTrue(tilesContainer.getText().contains("Report an issue with an order or delivery"));
        Assert.assertTrue(tilesContainer.getText().contains("Show me my Requests"));
        Assert.assertTrue(tilesContainer.getText().contains("Question about an order or eSuport assistance"));
        Assert.assertTrue(tilesContainer.getText().contains("Question about my Account"));
        Assert.assertTrue(tilesContainer.getText().contains("Request Allocation or Saturday Delivery (SET Request)"));

        // Step 4: Click on tile "Report an issue with an order or delivery"
        WebElement reportIssueTile = driver.findElement(By.id("reportIssueTile"));
        reportIssueTile.click();
        Assert.assertEquals(driver.getTitle(), "Report Issue Page");

        // Step 5: Click on tile "Show me my Requests"
        driver.navigate().back();
        WebElement myRequestsTile = driver.findElement(By.id("myRequestsTile"));
        myRequestsTile.click();
        Assert.assertEquals(driver.getTitle(), "My Requests Dashboard");

        // Step 6: Click on tile "Question about an order or eSuport assistance"
        driver.navigate().back();
        WebElement questionOrderTile = driver.findElement(By.id("questionOrderTile"));
        questionOrderTile.click();
        Assert.assertEquals(driver.getTitle(), "Order Assistance Page");

        // Step 7: Click on tile "Question about my Account"
        driver.navigate().back();
        WebElement questionAccountTile = driver.findElement(By.id("questionAccountTile"));
        questionAccountTile.click();
        Assert.assertEquals(driver.getTitle(), "Account Assistance Page");

        // Step 8: Click on tile "Request Allocation or Saturday Delivery (SET Request)"
        driver.navigate().back();
        WebElement setRequestTile = driver.findElement(By.id("setRequestTile"));
        setRequestTile.click();
        Assert.assertEquals(driver.getCurrentUrl(), "https://external.sales.efficiency.tool");
    }

    @AfterClass
    public void tearDown() {
        if (driver != null) {
            driver.quit();
        }
    }
}
```