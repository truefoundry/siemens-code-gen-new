system:
  # Model configuration
  model_config:
    temperature: 0.3
    max_tokens: 8192
    top_p: 0.8
    presence_penalty: 0
    frequency_penalty: 0
    max_retries: 3
    timeout: 30  # seconds
    
  # Prompt file paths
  prompt_paths:
    system_default: "prompts/system_default.txt"
    base_case: "prompts/base_case.txt"
    few_shot_case: "prompts/few_shot_case.txt"
    base_step: "prompts/base_step.txt"
    few_shot_step: "prompts/few_shot_step.txt"
  
  # Task-specific prompts with improved descriptions
  prompts:
    imports:
      description: "Expert system for Java import analysis"
      instruction: "Analyze Java test files to identify and list all necessary imports, including:
                   - Selenium WebDriver dependencies
                   - TestNG framework imports
                   - Custom framework requirements
                   - Utility and helper class imports"
      
    steps:
      description: "Test case step decomposition expert"
      instruction: "Break down Java-Selenium test cases into logical steps:
                   - Test setup and prerequisites
                   - Main test actions and workflows
                   - Validation and verification points
                   - Cleanup and resource management
                   - Error handling procedures"
      
    combine:
      description: "Test step integration specialist"
      instruction: "Create well-structured test cases by combining steps with:
                   - Proper test flow and organization
                   - Robust error handling
                   - Clear documentation and comments
                   - Best practices implementation
                   - Maintainable code structure"
      
    edit:
      description: "Test case optimization expert"
      instruction: "Review and enhance test cases focusing on:
                   - Code readability and clarity
                   - Maintainability improvements
                   - Reliability enhancements
                   - Naming convention consistency
                   - Assertion quality and coverage"

llm:
  # LLM model configurations
  models:
    main:
      name: "openai-main/gpt-4o"
      version: "latest"
      api_version: "2024-02"
    embedding:
      name: "openai-main/text-embedding-3-large"
      version: "latest"
  
  # RAG configurations
  rag:
    similarity_top_k: 8
    min_similarity_score: 0.7
    max_context_length: 4096
    chunk_size: 1000
    chunk_overlap: 200

paths:
  # Data and file paths
  base_dir: "."
  data:
    root: "data"
    extracted_texts: "extracted_texts"
    test_cases: "MDLA"
    rag_output: "data/rag"
    prompt_output: "data/prompt_inference"
    ground_truth: "Formatted_data/Ground_Truths"
  
  prompts:
    input: "Formatted_data/Text_files/838.txt"
    formatted: "Formatted_data"

logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "logs/test_generation.log"
  max_size: 10485760  # 10MB
  backup_count: 5

validation:
  enable_schema_validation: true
  max_test_case_size: 1000000  # 1MB
  supported_file_types: 
    - ".java"
    - ".txt"
  required_sections:
    - "imports"
    - "test_class"
    - "test_methods"


